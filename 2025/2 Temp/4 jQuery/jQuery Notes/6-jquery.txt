==========================
ðŸŽ¯ jQuery Event Listeners
==========================
Vanilla Js
ðŸ‘‰ 1. Click event (no loop needed!for multiple elements):
   $("h1").click(function() {
     $("h1").css("color", "purple");
   });

   $("button").click(function() {
     $("h1").css("color", "purple");
   });

âœ… jQuery automatically adds the event listener to all matching elements (no need for loops).

ðŸ‘‰ 2. Keypress event on input:
   $("input").keypress(function(event) {
     console.log(event.key); // Logs key pressed
   });

ðŸ‘‰ 3. Keypress event on the whole page:
   $(document).keypress(function(event) {
     console.log(event.key);
   });

ðŸ’¡ Challenge example â€” Show pressed key in <h1>:
   $(document).keypress(function(event) {
     $("h1").text(event.key);
   });

======================
ðŸ§  Alternative: .on() method (more flexible)
======================

ðŸ‘‰ Syntax:
   $("element").on("eventType", function() {
     // callback code
   });

ðŸ‘‰ Example:
   $("h1").on("mouseover", function() {
     $("h1").css("color", "purple");
   });

âœ… Can replace .click(), .keypress(), etc.
âœ… Supports any DOM event (e.g., click, keydown, mouseover, submit, etc.)

======================
âœ… Summary:
======================
- .click() â†’ Handle mouse clicks
- .keypress() â†’ Handle keyboard input
- .on("event", callback) â†’ General-purpose event handler
- jQuery simplifies event binding (no for loops, no verbose syntax)
- Use .on() for maximum flexibility

Next: DOM animations with jQuery!
