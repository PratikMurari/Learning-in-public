==========================================

Created for absolute beginners using the 80/20 rule.
Last updated: July 02, 2025

==================================================================
BEGINNER ROADMAP - Table of Contents
==================================================================
1. What is Tailwind CSS?
2. Why Use Tailwind Over Regular CSS?
3. Utility-First Fundamentals
4. Responsive Design (Mobile-First)
5. Common Utilities:
    - Text
    - Colors
    - Spacing (Margin, Padding)
    - Flexbox
    - Grid
    - Width/Height
    - Backgrounds
    - Borders & Radius
    - Font styles
6. Dark Mode
7. Custom Styles & Tailwind Config
8. Reusable Components
9. Just-In-Time (JIT) Compiler
10. Real-World Tips & Tricks

==================================================================
1. What is Tailwind CSS?
==================================================================
Tailwind CSS is a utility-first CSS framework. Instead of writing your own CSS,
you style elements by applying pre-made classes directly to your HTML.

Think of it like LEGO: tiny blocks (classes) you piece together.

ðŸ“˜ Docs: https://tailwindcss.com/docs

==================================================================
2. Why Use Tailwind Over Regular CSS?
==================================================================
âœ… No need to write custom class names.
âœ… No switching between HTML and CSS files.
âœ… Super fast styling with real-time results.
âœ… Styles are reusable and responsive.
âœ… Built-in support for dark mode, themes, and responsive layouts.

ðŸ’¡ Instead of writing:

<div class="container">
  <h1 class="title">Hello</h1>
</div>

And styling it like this:

.container {
  display: flex;
  justify-content: center;
}
.title {
  color: blue;
}

You write this with Tailwind:

<div class="flex justify-center">
  <h1 class="text-blue-500">Hello</h1>
</div>

ðŸ“˜ Docs: https://tailwindcss.com/docs/utility-first

==================================================================
3. Utility-First Fundamentals
==================================================================
Every Tailwind class equals one CSS rule.

Examples:
- text-center â†’ text-align: center;
- bg-red-500 â†’ background-color: red shade 500
- mt-4 â†’ margin-top: 1rem

ðŸ“˜ Docs: https://tailwindcss.com/docs

==================================================================
4. Responsive Design (Mobile-First)
==================================================================
Tailwind uses **mobile-first** breakpoints. That means small screen styles
are applied by default, and larger screen styles override them.

<p class="text-sm md:text-lg lg:text-xl">
  Responsive text size
</p>

ðŸ“˜ Docs: https://tailwindcss.com/docs/responsive-design

==================================================================
5. Common Utilities
==================================================================
âž¡ Text & Fonts:
- text-sm, text-lg, text-2xl
- font-bold, font-mono, font-light
ðŸ“˜ https://tailwindcss.com/docs/font-size

âž¡ Colors:
- text-blue-500, bg-gray-100, border-green-300
ðŸ“˜ https://tailwindcss.com/docs/text-color

âž¡ Spacing:
- Margin: m-4, mt-2, mx-1
- Padding: p-6, px-2, py-3
ðŸ“˜ https://tailwindcss.com/docs/spacing

âž¡ Flexbox:
- flex, justify-center, items-start, flex-col, space-x-4
ðŸ“˜ https://tailwindcss.com/docs/flex

âž¡ Grid:
- grid, grid-cols-3, gap-4
ðŸ“˜ https://tailwindcss.com/docs/grid-template-columns

âž¡ Width & Height:
- w-full, w-1/2, h-16, min-w-[320px]
ðŸ“˜ https://tailwindcss.com/docs/width

âž¡ Backgrounds:
- bg-red-500, bg-gradient-to-r, bg-cover
ðŸ“˜ https://tailwindcss.com/docs/background-color

âž¡ Borders & Radius:
- border, border-2, border-blue-300, rounded, rounded-lg
ðŸ“˜ https://tailwindcss.com/docs/border-radius

==================================================================
6. Dark Mode
==================================================================
Tailwind supports dark mode with the dark: prefix.

<div class="bg-white text-black dark:bg-black dark:text-white">
  Dark mode content
</div>

ðŸ“˜ https://tailwindcss.com/docs/dark-mode

==================================================================
7. Custom Styles & Tailwind Config
==================================================================
Use @apply, @layer, and theme to make styles reusable.

In your CSS:

@layer components {
  .btn-primary {
    @apply bg-blue-500 text-white px-4 py-2 rounded;
  }
}

Now in HTML:

<button class="btn-primary">Click me</button>

ðŸ“˜ https://tailwindcss.com/docs/functions-and-directives

==================================================================
8. Just-In-Time (JIT) Compiler
==================================================================
âœ… Optimizes performance
âœ… Supports custom values on-the-fly

<p class="text-[13px] bg-[#ff6600] p-[10px]">Custom Size</p>

ðŸ“˜ https://tailwindcss.com/docs/just-in-time-mode

==================================================================
9. Reusable Components
==================================================================
@layer utilities {
  .flex-center {
    @apply flex justify-center items-center;
  }
}

Use in HTML:

<div class="flex-center">Centered Content</div>

==================================================================
10. Real-World Tips & Tricks
==================================================================
âœ¨ Use accent-* to style checkboxes and radios  
âœ¨ Use selection:* to customize highlighted text  
âœ¨ Fluid text: text-[min(10vw,70px)]  
âœ¨ File styling: file:bg-blue-500 file:text-white  
âœ¨ Custom themes using @layer and @apply  
âœ¨ Practice with https://flexboxfroggy.com and https://cssgridgarden.com  

==================================================================
You Got This! ðŸ’ª
==================================================================
Don't memorize everything. Use the docs. Use Command+K on Tailwindâ€™s site.  
You'll develop muscle memory fast.

Happy Tailwinding!
